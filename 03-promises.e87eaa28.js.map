{"mappings":"iiBAGA,IAAAA,EAAAC,EAAA,SAGMC,EAAaC,SAASC,cAAc,SAK1C,SAASC,EAAWC,EAAUC,GAC5B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAGpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAdgBJ,SAASC,cAAc,uBAkB/BU,iBAAiB,SAEhC,SAAiBC,GACfA,EAAIC,iBAMJ,IAJA,IAAIC,EAAQC,OAAOf,SAASC,cAAc,qBAAqBe,OACzDC,EAAOF,OAAOf,SAASC,cAAc,oBAAoBe,OACzDE,EAASH,OAAOf,SAASC,cAAc,sBAAsBe,OAE1DG,EAAW,EAAGA,GAAYD,EAAQC,GAAY,EAGvDjB,EAAWiB,EAAUL,GAClBM,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MACjBkB,QAAQC,IAAI,uBAAwCC,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,OAC1DqB,EAAA5B,GAAS6B,OAAOC,QAAQ,uBAAwCH,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,M,IAGvEwB,OAAM,SAAAP,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MAClBkB,QAAQC,IAAI,sBAAuCC,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,OACvDqB,EAAA5B,GAAS6B,OAAOG,QAAQ,sBAAqCL,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,M,IAIvEL,EAAW+B,QACbhB,GAASG,C","sources":["src/js/03-promises.js"],"sourcesContent":["\n\n\nimport Notiflix from 'notiflix';\nimport \"notiflix/dist/notiflix-3.2.5.min.css\";\n\nconst submitForm = document.querySelector('.form')\nconst promisesButton = document.querySelector('button[type=submit]');\n\n\n\nfunction newPromise(position, delay) { \n  return new Promise((resolve, reject) => { \n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n       \n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  })\n}\n\npromisesButton.addEventListener('click', onClick);\n\nfunction onClick(evt) {\n  evt.preventDefault();\n\n  let delay = Number(document.querySelector('input[name=delay]').value);\n  const step = Number(document.querySelector('input[name=step]').value);\n  const amount = Number(document.querySelector('input[name=amount]').value);\n\n  for (let position = 1; position <= amount; position += 1) {\n\n\n  newPromise(position, delay)\n    .then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n\n    })\n    .catch(({ position, delay }) => {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n\n    });\n\n    submitForm.reset();\n  delay += step;\n}\n}\n\n/* import { formats } from 'flatpickr/dist/utils/formatting'; */\n\n\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$submitForm","document","querySelector","$ce04d3a99e08e73b$var$newPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","evt","preventDefault","delay1","Number","value","step","amount","position1","then","param","console","log","concat","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.e87eaa28.js.map"}